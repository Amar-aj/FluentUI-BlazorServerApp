@page "/preferences-n"
@using Microsoft.FluentUI.AspNetCore.Components.DesignTokens

@rendermode InteractiveServer

<FluentStack Orientation="Orientation.Vertical">
	<FluentLabel Typo="Typography.PageTitle">Settings</FluentLabel>

	<FluentSelect Label="Color" Items=@(Enum.GetValues<OfficeColor>()) Height="200" @bind-SelectedOption="@Color"></FluentSelect>

	<FluentSwitch Label="Theme" UncheckedMessage="Light" CheckedMessage="Dark" @bind-Value="@IsDark"></FluentSwitch>

</FluentStack>

@code {
	[Inject]
	private BaseLayerLuminance BaseLayerLuminance { get; set; } = default!;

	[Inject]
	private AccentBaseColor AccentBaseColor { get; set; } = default!;

	private OfficeColor _color = OfficeColor.Default;
	private bool _isDark = false;

	public OfficeColor Color
	{
		get => _color;
		set
		{
			_color = value;
			var colorHex = _color.ToAttributeValue() ?? "default";
			AccentBaseColor.WithDefault(colorHex.ToSwatch());
		}
	}
	public bool IsDark
	{
		get => _isDark;
		set
		{
			_isDark = value;
			var Luminance = _isDark ? StandardLuminance.DarkMode : StandardLuminance.LightMode;
			BaseLayerLuminance.WithDefault(Luminance.GetLuminanceValue());
		}
	}


}